# -*- coding: utf-8 -*-
"""report_generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LJTRke0Q22KRS2rn-eDvgYHBK0H64i8u
"""

from reportlab.lib.pagesizes import A4
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Image, PageBreak
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib.units import inch
from pathlib import Path
import os

def generate_report(title, insights_text, image_paths=None, out_filename="outputs/example_report.pdf"):
    """
    Generates a simple PDF report:
    - Title
    - Insights (text)
    - Appended images (one per page or inline)
    """
    Path(os.path.dirname(out_filename) or ".").mkdir(parents=True, exist_ok=True)
    doc = SimpleDocTemplate(out_filename, pagesize=A4)
    styles = getSampleStyleSheet()
    elements = []
    elements.append(Paragraph(title, styles["Title"]))
    elements.append(Spacer(1, 12))
    elements.append(Paragraph("Automated insights", styles["Heading2"]))
    for para in insights_text.split("\n"):
        elements.append(Paragraph(para, styles["Normal"]))
        elements.append(Spacer(1, 6))

    if image_paths:
        elements.append(PageBreak())
        elements.append(Paragraph("Visualizations", styles["Heading2"]))
        for img_path in image_paths:
            if not Path(img_path).exists():
                continue
            # resize keeping aspect ratio; width set to 6 inches
            try:
                img = Image(img_path, width=6*inch, height=4*inch)
            except Exception:
                # fallback: add as raw
                img = Image(img_path)
            elements.append(Spacer(1, 6))
            elements.append(img)
            elements.append(Spacer(1, 8))

    doc.build(elements)
    print(f"[report_generator] Report written to {out_filename}")
    return out_filename

if __name__ == "__main__":
    # small demo
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("--out", default="../outputs/example_report.pdf")
    args = parser.parse_args()
    generate_report("Test Report", "This is a short test.", image_paths=[], out_filename=args.out)