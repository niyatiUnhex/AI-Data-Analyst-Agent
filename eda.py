# -*- coding: utf-8 -*-
"""eda.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ld6lpQAR3BZEiDGzvDP5lyA4h1NlvI4R
"""

import pandas as pd
import numpy as np

def summary_statistics(df):
    """
    Returns dictionary of summary items for inclusion in report.
    """
    result = {}
    result["shape"] = df.shape
    result["columns"] = df.columns.tolist()
    result["dtypes"] = df.dtypes.astype(str).to_dict()
    result["describe_numeric"] = df.describe().to_dict()
    # For categorical columns - top values
    cats = df.select_dtypes(include=["object", "category"])
    top_values = {}
    for c in cats.columns:
        top_values[c] = df[c].value_counts().head(5).to_dict()
    result["top_values"] = top_values
    # Missing values
    result["missing"] = df.isna().sum().to_dict()
    # Correlation matrix (numeric)
    num_df = df.select_dtypes(include=[np.number])
    if not num_df.empty:
        result["correlation"] = num_df.corr().to_dict()
    else:
        result["correlation"] = {}
    print("[eda] Computed summary statistics")
    return result

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("--input", default="../data/sample.csv")
    args = parser.parse_args()
    import data_loader, preprocess
    df = data_loader.load_data(args.input)
    df = preprocess.preprocess_data(df)
    stats = summary_statistics(df)
    import json
    print(json.dumps(stats, indent=2))